{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, map, Subject, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.error = new Subject();\n  }\n  createProduct(products) {\n    console.log(products);\n    const headers = new HttpHeaders({\n      myHeader: 'procademy'\n    });\n    this.http.post('https://angularbymahfuz-default-rtdb.firebaseio.com/products.json', products, {\n      headers: headers\n    }).subscribe(res => {\n      console.log(res);\n    }, err => {\n      this.error.next(err.message);\n    });\n  }\n  fetchProduct() {\n    const header = new HttpHeaders().set('content-type', 'application/json').set('Access-Control-Allow-Origin', '*');\n    return this.http.get('https://angularbymahfuz-default-rtdb.firebaseio.com/products.json', {\n      headers: header\n    }).pipe(map(res => {\n      const products = [];\n      for (const key in res) {\n        if (res.hasOwnProperty(key)) {\n          products.push({\n            ...res[key],\n            id: key\n          });\n        }\n      }\n      return products;\n    }), catchError(err => {\n      return throwError(err);\n    }));\n  }\n  deleteProduct(id) {\n    this.http.delete('https://angularbymahfuz-default-rtdb.firebaseio.com/products/' + id + '.json').subscribe();\n  }\n  deleteAllProducts() {\n    this.http.delete('https://angularbymahfuz-default-rtdb.firebaseio.com/products.json').subscribe();\n  }\n  updateProduct(id, value) {\n    this.http.put('https://angularbymahfuz-default-rtdb.firebaseio.com/products/' + id + '.json', value).subscribe();\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,UAAU,EAAEC,GAAG,EAAEC,OAAO,EAAEC,UAAU,QAAQ,MAAM;;;AAG3D,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,UAAK,GAAG,IAAIJ,OAAO,EAAU;EACU;EACvCK,aAAa,CAACC,QAAwD;IACpEC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,MAAMG,OAAO,GAAG,IAAIZ,WAAW,CAAC;MAAEa,QAAQ,EAAE;IAAW,CAAE,CAAC;IAE1D,IAAI,CAACN,IAAI,CACNO,IAAI,CACH,mEAAmE,EACnEL,QAAQ,EACR;MAAEG,OAAO,EAAEA;IAAO,CAAE,CACrB,CACAG,SAAS,CACPC,GAAG,IAAI;MACNN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;IAClB,CAAC,EACAC,GAAG,IAAI;MACN,IAAI,CAACC,KAAK,CAACC,IAAI,CAACF,GAAG,CAACG,OAAO,CAAC;IAC9B,CAAC,CACF;EACL;EACAC,YAAY;IACV,MAAMC,MAAM,GAAG,IAAItB,WAAW,EAAE,CAC7BuB,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CACvCA,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC;IAC1C,OAAO,IAAI,CAAChB,IAAI,CACbiB,GAAG,CACF,mEAAmE,EACnE;MAAEZ,OAAO,EAAEU;IAAM,CAAE,CACpB,CACAG,IAAI,CACHvB,GAAG,CAAEc,GAAG,IAAI;MACV,MAAMP,QAAQ,GAAG,EAAE;MACnB,KAAK,MAAMiB,GAAG,IAAIV,GAAG,EAAE;QACrB,IAAIA,GAAG,CAACW,cAAc,CAACD,GAAG,CAAC,EAAE;UAC3BjB,QAAQ,CAACmB,IAAI,CAAC;YAAE,GAAGZ,GAAG,CAACU,GAAG,CAAC;YAAEG,EAAE,EAAEH;UAAG,CAAE,CAAC;;;MAG3C,OAAOjB,QAAQ;IACjB,CAAC,CAAC,EACFR,UAAU,CAAEgB,GAAG,IAAI;MACjB,OAAOb,UAAU,CAACa,GAAG,CAAC;IACxB,CAAC,CAAC,CACH;EACL;EACAa,aAAa,CAACD,EAAU;IACtB,IAAI,CAACtB,IAAI,CACNwB,MAAM,CACL,+DAA+D,GAC7DF,EAAE,GACF,OAAO,CACV,CACAd,SAAS,EAAE;EAChB;EACAiB,iBAAiB;IACf,IAAI,CAACzB,IAAI,CACNwB,MAAM,CACL,mEAAmE,CACpE,CACAhB,SAAS,EAAE;EAChB;EACAkB,aAAa,CAACJ,EAAU,EAAEK,KAAc;IACtC,IAAI,CAAC3B,IAAI,CACN4B,GAAG,CACF,+DAA+D,GAC7DN,EAAE,GACF,OAAO,EACTK,KAAK,CACN,CACAnB,SAAS,EAAE;EAChB;;AAvEWV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA+B,SAAd/B,cAAc;EAAAgC,YADD;AAAM","names":["HttpHeaders","catchError","map","Subject","throwError","ProductService","constructor","http","createProduct","products","console","log","headers","myHeader","post","subscribe","res","err","error","next","message","fetchProduct","header","set","get","pipe","key","hasOwnProperty","push","id","deleteProduct","delete","deleteAllProducts","updateProduct","value","put","factory","providedIn"],"sourceRoot":"","sources":["I:\\AngularBasics\\angular-http\\src\\app\\Service\\products.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError, map, Subject, throwError } from 'rxjs';\r\nimport { Product } from '../model/products';\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProductService {\r\n  error = new Subject<string>();\r\n  constructor(private http: HttpClient) {}\r\n  createProduct(products: { pName: string; desc: string; price: string }) {\r\n    console.log(products);\r\n    const headers = new HttpHeaders({ myHeader: 'procademy' });\r\n\r\n    this.http\r\n      .post<{ name: string }>(\r\n        'https://angularbymahfuz-default-rtdb.firebaseio.com/products.json',\r\n        products,\r\n        { headers: headers }\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          console.log(res);\r\n        },\r\n        (err) => {\r\n          this.error.next(err.message);\r\n        }\r\n      );\r\n  }\r\n  fetchProduct() {\r\n    const header = new HttpHeaders()\r\n      .set('content-type', 'application/json')\r\n      .set('Access-Control-Allow-Origin', '*');\r\n    return this.http\r\n      .get<{ [key: string]: Product }>(\r\n        'https://angularbymahfuz-default-rtdb.firebaseio.com/products.json',\r\n        { headers: header }\r\n      )\r\n      .pipe(\r\n        map((res) => {\r\n          const products = [];\r\n          for (const key in res) {\r\n            if (res.hasOwnProperty(key)) {\r\n              products.push({ ...res[key], id: key });\r\n            }\r\n          }\r\n          return products;\r\n        }),\r\n        catchError((err) => {\r\n          return throwError(err);\r\n        })\r\n      );\r\n  }\r\n  deleteProduct(id: string) {\r\n    this.http\r\n      .delete(\r\n        'https://angularbymahfuz-default-rtdb.firebaseio.com/products/' +\r\n          id +\r\n          '.json'\r\n      )\r\n      .subscribe();\r\n  }\r\n  deleteAllProducts() {\r\n    this.http\r\n      .delete(\r\n        'https://angularbymahfuz-default-rtdb.firebaseio.com/products.json'\r\n      )\r\n      .subscribe();\r\n  }\r\n  updateProduct(id: string, value: Product) {\r\n    this.http\r\n      .put(\r\n        'https://angularbymahfuz-default-rtdb.firebaseio.com/products/' +\r\n          id +\r\n          '.json',\r\n        value\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}